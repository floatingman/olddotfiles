#!/bin/bash


if $_ismac; then
  [[ -r "$HOME/bin" ]] && export PATH="$PATH:$(du -I .git "$HOME/bin" | cut -f2 | tr '\n' ':')"
  [[ -r "$HOME/.bin" ]] && export PATH="$PATH:$(du -I .git "$HOME/.bin" | cut -f2 | tr '\n' ':')"
else
  [[ -r "$HOME/bin" ]] && export PATH="$PATH:$(du --exclude=.git "$HOME/bin" | cut -f2 | tr '\n' ':')"
  [[ -r "$HOME/.bin" ]] && export PATH="$PATH:$(du --exclude=.git "$HOME/.bin" | cut -f2 | tr '\n' ':')"
fi

[[ -r "$HOME/.local/bin" ]] && _add_to_path "$HOME/.local/bin"

# Node
[[ -r "$HOME/node_modules" ]] && _add_to_path "$HOME/node_modules/.bin"

# Haskell
[[ -r "$HOME/.cabal" ]] && _add_to_path "$HOME/.cabal/bin"

#misc apps
[[ -r "$HOME/apps" ]] && _add_to_path "$HOME/apps"

# if eclipse is installed
[[ -f "$HOME/apps/eclipse/eclipse" ]] && _add_to_path "$HOME/apps/eclipse"

# if intellij is installed
[[ -f "$HOME/apps/intellij/bin/idea.sh" ]] && _add_to_path "$HOME/apps/intellij/bin"

#GO Language
if [[ -r "$HOME/golang" ]]; then
    export GOPATH=$HOME/golang
    _add_to_path ${GOPATH//://bin:}/bin
fi

if [[ -r "$HOME/go" ]]; then
    export GOPATH=$HOME/go
    _add_to_path ${GOPATH//://bin:}/bin
    _add_to_path /usr/local/go/bin
fi

if [[ -r "$HOME/.rbenv" ]]; then
    export PATH="$HOME/.rbenv/bin:$PATH"
    eval "$(rbenv init -)"
    export PATH="$HOME/.rbenv/plugins/ruby-build/bin:$PATH"
fi

#Composer
[[ -d "$HOME/.composer" ]] && _add_to_path "$HOME/.composer/vendor/bin"

# Heroku
[[ -r "/usr/local/heroku" ]] && _add_to_path "/usr/local/heroku/bin"

# PHP5
[[ -f /usr/local/php5/bin/php ]] && _add_to_path "/usr/local/php5/bin"

# MYSQL
[[ -f /usr/local/mysql/bin/mysql ]] && _add_to_path "/usr/local/mysql/bin"

[[ -d "$HOME/.cargo/bin" ]] && _add_to_path "$HOME/.cargo/bin"

#mac stuff
if $_ismac; then
  _add_to_path "/usr/local/sbin"
fi

if [ -d "$HOME/.asdf" ]; then
   . $HOME/.asdf/asdf.sh
   . $HOME/.asdf/completions/asdf.bash
fi

export SDKMAN_DIR="${HOME}/.sdkman"
[[ -s "${SDKMAN_DIR}/bin/sdkman-init.sh" ]] && source "${SDKMAN_DIR}/bin/sdkman-init.sh"
test -e "${HOME}/.iterm2_shell_integration.bash" && source "${HOME}/.iterm2_shell_integration.bash"

# PyENV
if [[ -r "$HOME/.pyenv" ]]; then
  _add_to_path "$PYENV_ROOT/bin"
  eval "$(pyenv init -)"
  eval "$(register-python-argcomplete pipx)"
fi

###-tns-completion-start-###
if [ -f /home/dnewman/.tnsrc ]; then
  source /home/dnewman/.tnsrc
fi
###-tns-completion-end-###
