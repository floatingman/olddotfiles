#############
# Utilities #
#############

# is $1 installed?
_have() { which "$1" &>/dev/null; }

# Detect which platform we are on
_islinux=false
[[ "$(uname -s)" =~ Linux ]] && _islinux=true
_ismac=false
[[ "$(uname -s)" =~ Darwin ]] && _ismac=true
_isubuntu=false
[[ "$(uname -v)" =~ Ubuntu ]] && _isubuntu=true
_isarch=false
[[ -f /etc/arch-release ]] && _isarch=true
# Detect if gui is running
_isxrunning=false
[[ -n "$DISPLAY" ]] && _isxrunning=true
# Detect if root
_isroot=false
[[ $UID -eq 0 ]] && _isroot=true

########
# Core #
########

# root privileges
alias doas="doas --"

# Directory navigation
alias ..='cd ..'
alias ...='cd ../..'
alias .3='cd ../../..'
alias .4='cd ../../../..'
alias .5='cd ../../../../..'

# vim and emacs
if $_ismac; then
   alias em="/usr/local/bin/emacs -nw"
else
   alias em="/usr/bin/emacs -nw"
fi
alias e=$EDITOR
alias se="sudo $EDITOR"
alias vim="nvim"

#alias emacs="emacsclient -c -a 'emacs'"

# pacman and yay
if _have pacman; then
    alias p="sudo pacman"
    alias pacman="sudo pacman"
    alias pacx="sudo pacman --remove"
    alias pacX="sudo pacman --remove --nosave --recursive"
    alias pacsyu='sudo pacman -Syyu'                 # update only standard pkgs
    alias unlock="sudo rm /var/lib/pacman/db.lck"    # remove pacman lock
    alias cleanup='sudo pacman -Rns $(pacman -Qtdq)' # remove orphaned packages
    # For when keys break
    alias archlinx-fix-keys="sudo pacman-key --init && sudo pacman-key --populate archlinux && sudo pacman-key --refresh-keys"
fi

if _have yay; then
    alias yaysua="yay -Sua --noconfirm"              # update only AUR pkgs
    alias yaysyu="yay -Syu --noconfirm"              # update standard pkgs and AUR pkgs
fi

if _have reflector; then
    # get fastest mirrors
    alias mirror="sudo reflector -f 30 -l 30 --number 10 --verbose --save /etc/pacman.d/mirrorlist"
    alias mirrord="sudo reflector --latest 50 --number 20 --sort delay --save /etc/pacman.d/mirrorlist"
    alias mirrors="sudo reflector --latest 50 --number 20 --sort score --save /etc/pacman.d/mirrorlist"
    alias mirrora="sudo reflector --latest 50 --number 20 --sort age --save /etc/pacman.d/mirrorlist"
fi

if _have exa; then
    # Changing "ls" to "exa"
    alias lla='exa -la --color=always --group-directories-first' # list all files long format
    alias lz='exa -al --reverse --sort=size --color=always --group-directories-first' # sort by size
    alias l.='exa -a | egrep "^\."'
else
    alias lla='ls -la --color=always --group-directories-first'  # long format
    alias l.='ls -a | egrep "^\."'
fi

# Colorize grep output (good for log files)
alias grep='grep --color=auto'
alias egrep='egrep --color=auto'
alias fgrep='fgrep --color=auto'

alias ag='sag'

# confirm before overwriting something
alias cp="cp -i"
alias mv='mv -i'
alias rm='rm -i'

alias rm30='find * -mtime +30 -exec rm {} \;' # remove files older than 30 days

alias mkdir='mkdir -p'
alias ka='killall'       # Shorten kill all

# adding flags
alias df='df -h'                          # human-readable sizes
alias free='free -m'                      # show sizes in MB
alias lynx='lynx -cfg=~/.lynx/lynx.cfg -lss=~/.lynx/lynx.lss -vikeys'
alias vifm='./.config/vifm/scripts/vifmrun'

## get top process eating memory
alias psmem='ps auxf | sort -nr -k 4'
alias psmem10='ps auxf | sort -nr -k 4 | head -10'

## get top process eating cpu ##
alias pscpu='ps auxf | sort -nr -k 3'
alias pscpu10='ps auxf | sort -nr -k 3 | head -10'

if _have prettyping; then
    alias ping='prettyping --nolegend'
fi
alias ducks="du -sch .i[!.]* * |sort -rh |head -10" # print top 10 largest files in pwd
alias sps="ps aux | grep -v grep | grep"    # search and display processes by keyword
alias df='df -h'

###########
# Udiskie #
###########
if _have udiskie-mount; then
    alias um='udiskie-mount -r'
    alias uu='udiskie-umount'
    alias up='um -p "builtin:tty"'
fi

#######
# Git #
#######

# Ripped from Prezto
# https://github.com/sorin-ionescu/prezto/tree/master/modules/git

function git-branch-current {
    if ! command git rev-parse 2> /dev/null; then
      print "$0: not a repository: $PWD" >&2
      return 1
    fi

    local ref="$(command git symbolic-ref HEAD 2> /dev/null)"

    if [[ -n "$ref" ]]; then
      print "${ref#refs/heads/}"
      return 0
    else
      return 1
    fi
}

alias g='git'
alias gb='git branch'
alias gc='git commit --verbose'
alias gco='git checkout'
alias gia='git add'
alias gm='git merge'
alias gpp='git pull origin "$(git-branch-current 2> /dev/null)" && git push origin "$(git-branch-current 2> /dev/null)"'
alias gwR='git reset --hard'
alias gwd='git diff --no-ext-diff'
alias gwr='git reset --soft'
alias gws='git status --short'
alias gitignoreall="git status --porcelain | grep '^??' | cut -c4- >> .gitignore"

if _have tig; then
   alias t='tig status'
fi

# cd into git root dir
alias cdr='cd $(git rev-parse --show-toplevel)'

# systemd
alias mach_list_systemctl="systemctl list-unit-files --state=enabled"
alias SS="sudo systemctl"

########
# Misc #
########
alias calcurse="calcurse -D ~/.config/calcurse"
alias http-serve='python -m http.server'
alias bc='bc -lq'
alias utc='env TZ="UTC" date'
alias weath="less -S ${XDG_DATA_HOME:-$HOME/.local/share}/weatherreport"
alias ref="shortcuts >/dev/null; source ${XDG_CONFIG_HOME:-$HOME/.config}/shortcutrc ; source ${XDG_CONFIG_HOME:-$HOME/.config}/zshnameddirrc"
alias path='echo $PATH | tr ":" "\n" | nl' # human readable path
iowaiting() {
    watch -n 1 "(ps aux | awk '\$8 ~ /D/  { print \$0 }')"
}

# Merge Xresources
alias merge='xrdb -merge ~/.Xresources'

# get error messages from journalctl
alias jctl="journalctl -p 3 -xb"

# gpg encryption
# verify signature for isos
alias gpg-check="gpg2 --keyserver-options auto-key-retrieve --verify"
# receive the key of a developer
alias gpg-retrieve="gpg2 --keyserver-options auto-key-retrieve --receive-keys"

# youtube-dl
if _have youtube-dl; then
    alias yta-aac="youtube-dl --extract-audio --audio-format aac "
    alias yta-best="youtube-dl --extract-audio --audio-format best "
    alias yta-flac="youtube-dl --extract-audio --audio-format flac "
    alias yta-m4a="youtube-dl --extract-audio --audio-format m4a "
    alias yta-mp3="youtube-dl --extract-audio --audio-format mp3 "
    alias yta-opus="youtube-dl --extract-audio --audio-format opus "
    alias yta-vorbis="youtube-dl --extract-audio --audio-format vorbis "
    alias yta-wav="youtube-dl --extract-audio --audio-format wav "
    alias ytv-best="youtube-dl -f bestvideo+bestaudio "
fi

# MPV
if _have mpv; then
   # Create a playlist and play all files in directory
   alias mpvplaylist="mpv ./ --idle=once --script-opts=playlistmanager-loadfiles_on_start=yes"
fi

# switch between shells
alias tobash="sudo chsh $USER -s /bin/bash && echo 'Now log out.'"
alias tozsh="sudo chsh $USER -s /bin/zsh && echo 'Now log out.'"
alias tofish="sudo chsh $USER -s /bin/fish && echo 'Now log out.'"

# termbin
alias tb="nc termbin.com 9999"

# cheat
cheat() {
    curl --location --silent "cheat.sh/$1?style=default" | ${PAGER:-less};
}

###############
# Colorscheme #
###############
# Set alacritty terminal colors
LIGHT_COLOR='solarized_light.yaml'
DARK_COLOR='solarized_dark.yaml'

alias day="alacritty-colorscheme -V apply $LIGHT_COLOR"
alias night="alacritty-colorscheme -V apply $DARK_COLOR"
alias toggle="alacritty-colorscheme -V toggle $LIGHT_COLOR $DARK_COLOR"

# Interactively enable sdkman to manage java versions
alias mach_java_mode="export SDKMAN_DIR="$HOME/.sdkman" && [[ -s "$HOME/.sdkman/bin/sdkman-init.sh" ]] && source "$HOME/.sdkman/bin/sdkman-init.sh""
