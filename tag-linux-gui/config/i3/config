# vim: filetype=i3
# File originally by Luke Smith <https://lukesmith.xyz>

# This config file will use environmental variables such as $BROWSER and $TERMINAL.
# You can set these variables in ~/.profile or ~/.bash_profile if you have it as below:
#
# export FILE="ranger"
# export TERMINAL="st"

# #---Basic Definitions---# #
#for_window [class="^.*"] border pixel 2
#gaps inner 15
#gaps outer 15
set $term --no-startup-id $TERMINAL
#(Mod1=<Alt>, Mod4=<Super>)
set $mod Mod4

# Configure border style <normal|lpixel|pixel xx|none|pixel>
new_window pixel 1
new_float normal

# Hide borders
hide_edge_borders none

# Change borders
bindsym $mod+u border none
bindsym $mod+y border pixel 1
bindsym $mod+n border normal

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
#font xft:URWGothic-Book 11
#font pango:Ubuntu 13
font pango:Inconsolata Regular 10

# Use Mouse+$mod to drag floating windows
floating_modifier $mod

# start a $term
bindsym $mod+Return exec i3-sensible-terminal

# #---Dropdown Windows---# #
# General dropdown window traits. The order can matter.
for_window [instance="dropdown_*"] floating enable
for_window [instance="dropdown_*"] move scratchpad
for_window [instance="dropdown_*"] sticky enable
for_window [instance="dropdown_*"] scratchpad show
for_window [instance="dropdown_tmuxdd"] resize set 625 450
for_window [instance="dropdown_dropdowncalc"] resize set 800 300
for_window [instance="dropdown_tmuxdd"] border pixel 3
for_window [instance="dropdown_dropdowncalc"] border pixel 2
for_window [instance="dropdown_*"] move position center
for_window [class="(?i)streamlink-twitch-gui"] floating enable

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
bar {
    status_command  py3status
    position        top
    colors {
        background #282828
        statusline #ebdbb2
        separator  #a89984

        background #3c3836
        statusline #ebdbb2
        separator  #666666

        # State             Border  BG      Text
        focused_workspace  #ebddb2 #ebdbb2 #282828
        active_workspace   #504945 #504945 #ebdbb2
        inactive_workspace #504945 #504945 #ebdbb2
        urgent_workspace   #fb4934 #fb4934 #504945
    }
}




# #---Basic Bindings---# #

bindsym $mod+Shift+space 	floating toggle
bindsym $mod+space		focus mode_toggle

bindsym $mod+Escape		workspace prev
bindsym $mod+Shift+Escape 	exec --no-startup-id prompt "Exit i3?" "i3-msg exit"

#STOP/HIDE EVERYTHING:
bindsym $mod+Shift+Delete	exec --no-startup-id lmc truemute ; exec --no-startup-id lmc pause ; exec --no-startup-id pauseallmpv; workspace 0; exec $term -e htop ; exec $term -e $FILE

# #---Letter Key Bindings---# #
#bindsym $mod+q			[con_id="__focused__" instance="^(?!dropdown_).*$"] kill
#bindsym $mod+Shift+q		[con_id="__focused__" instance="^(?!dropdown_).*$"] exec --no-startup-id kill -9 `xdotool getwindowfocus getwindowpid`
# Kill focused window
bindsym $mod+Shift+q kill

#bindsym $mod+t			split toggle
bindsym $mod+Shift+t		gaps inner current set 15; gaps outer current set 15

bindsym $mod+Shift+y		exec --no-startup-id i3resize left

#bindsym $mod+u			exec --no-startup-id ddspawn tmuxdd
bindsym $mod+Shift+u		exec --no-startup-id i3resize down

bindsym $mod+Shift+i		exec --no-startup-id i3resize up

bindsym $mod+o			sticky toggle
bindsym $mod+Shift+o		exec --no-startup-id i3resize right

bindsym $mod+a			exec --no-startup-id ddspawn dropdowncalc -f mono:pixelsize=24

#bindsym $mod+s			gaps inner current plus 5
#bindsym $mod+Shift+s		gaps inner current minus 5

bindsym $mod+Shift+d		gaps inner current set 0; gaps outer current set 0

bindsym $mod+f			fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

bindsym $mod+g			workspace prev

bindsym $mod+h			focus left
bindsym $mod+Shift+h		move left 30

bindsym $mod+j			focus down
bindsym $mod+Shift+j		move down 30
bindsym $mod+Ctrl+j     move workspace to output left

bindsym $mod+k			focus up
bindsym $mod+Shift+k		move up 30

bindsym $mod+l			focus right
bindsym $mod+Shift+l		move right 30
bindsym $mod+Ctrl+l     move workspace to output right

bindsym $mod+z			gaps outer current plus 5
bindsym $mod+Shift+z		gaps outer current minus 5

# reload the configuration file
bindsym $mod+Shift+c reload

# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart

# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -b 'Yes, exit i3' 'i3-msg exit'"


# #---Workspace Bindings---# #
# Automatic workspace switching back-and-forth.
workspace_auto_back_and_forth yes

# Make the currently focused window a scratchpad
bindsym $mod+Shift+minus move scratchpad

# Show the first scratchpad window
bindsym $mod+minus scratchpad show

# Window focus should not follow mouse
focus_follows_mouse no

# Cycle through workspaces with mouse.
bindsym --whole-window button10 workspace next
bindsym --whole-window button11 workspace prev

bindsym $mod+b                  workspace back_and_forth
bindsym $mod+Shift+b            move container to workspace back_and_forth; workspace back_and_forth
bindsym $mod+Home		workspace $ws1
bindsym $mod+Shift+Home	move container to workspace $ws1
bindsym $mod+End		workspace $ws10
bindsym $mod+Shift+End		move container to workspace $ws10
bindsym $mod+Prior		workspace prev
bindsym $mod+Shift+Prior	move container to workspace prev
bindsym $mod+Next		workspace next
bindsym $mod+Shift+Next	move container to workspace next
bindsym $mod+XF86Back		workspace prev
bindsym $mod+Shift+XF86Back	move container to workspace prev
bindsym $mod+XF86Forward	workspace next
bindsym $mod+Shift+XF86Forward	move container to workspace next
bindsym $mod+semicolon		workspace next

set $ws1 "1"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"

# switch to workspace
bindsym $mod+1		workspace $ws1
bindsym $mod+2		workspace $ws2
bindsym $mod+3		workspace $ws3
bindsym $mod+4		workspace $ws4
bindsym $mod+5		workspace $ws5
bindsym $mod+6		workspace $ws6
bindsym $mod+7		workspace $ws7
bindsym $mod+8		workspace $ws8
bindsym $mod+9		workspace $ws9
bindsym $mod+0		workspace $ws10

# move focused container to workspace
bindsym $mod+Shift+1	move container to workspace $ws1
bindsym $mod+Shift+2	move container to workspace $ws2
bindsym $mod+Shift+3	move container to workspace $ws3
bindsym $mod+Shift+4	move container to workspace $ws4
bindsym $mod+Shift+5	move container to workspace $ws5
bindsym $mod+Shift+6	move container to workspace $ws6
bindsym $mod+Shift+7	move container to workspace $ws7
bindsym $mod+Shift+8	move container to workspace $ws8
bindsym $mod+Shift+9	move container to workspace $ws9
bindsym $mod+Shift+0	move container to workspace $ws10

for_window [class="Pinentry"] sticky enable
for_window [title="GIMP Startup"] move workspace $ws5
for_window [class="Gimp"] move workspace $ws5
for_window [window_role="GtkFileChooserDialog"] resize set 800 600
for_window [window_role="GtkFileChooserDialog"] move position center
for_window [class="feh"]                    floating enable
for_window [class="arandr"]                 floating enable
for_window [class="Arandr"]                 floating enable
for_window [class="Screenkey"]              floating enable
for_window [class="Lxappearance"]           floating enable
for_window [class="Floating Xterm"]         floating enable

# Show taskwarrior tasks.
for_window [title="^taskwin$"] floating enable
bindsym $mod+t exec alacritty --title taskwin -e ~/bin/display_tasks.sh

# Float pinit windows
for_window [title="^pinit$"] floating enable

# Float pinentry windows
for_window [title="^pinentry$"] floating enable

# Float asoundconf-gtk windows
for_window [title="^Default Sound Card$"] floating enable

# Float pavucontrol windows
for_window [title="^Volume Control$"] floating enable

# float qcode windows
for_window [title="^qcode$"] floating enable

# float qalculate windows
for_window [title="qalculate-gtk"] floating enable

# #---Application WS assignment---# #
assign [class="chatty-Chatty"] $ws7
assign [class="(?i)discord"] $ws7
assign [class="(?i)mpv"] $ws1
for_window [class="(?i)mpv"] focus

# #---Function Buttons---# #
#bindsym $mod+F2		restart

# #---Arrow Keys---# #
bindsym $mod+Left		focus left
bindsym $mod+Down		focus down
bindsym $mod+Up			focus up
bindsym $mod+Right 		focus right
bindsym $mod+Shift+Left		move left
bindsym $mod+Shift+Down		move down
bindsym $mod+Shift+Up		move up
bindsym $mod+Shift+Right 	move right

############################
### Settings for i3-gaps ###
############################
gaps inner 15
gaps outer 0

# Smar gaps (gaps used if only more than one container on the workspace)
smart_gaps on

# Smart borders (draw borders around container only if it is not the only container on the workspace)
# on|no_gaps (on=always activate and no_gaps=only active if the gap size to the edge of the screen)
smart_borders on

# Press $mod+Shift+g to enter the gap mode.
# Choose o or i for modifying outer/inner gaps.
# Press one of + / - (in-/decrement for current workspace)
# or 0 (remove gaps for current workspace). If you also press Shift
# with these keys, the change will be global for all workspaces.
set $mode_gaps Gaps: (o) outer, (i) inner
set $mode_gaps_outer Outer Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_inner Inner Gaps: +|-|0 (local), Shift + +|-|0 (global)
bindsym $mod+Shift+g mode "$mode_gaps"


mode "$mode_gaps" {
        bindsym o      mode "$mode_gaps_outer"
        bindsym i      mode "$mode_gaps_inner"
        bindsym Return mode "default"
        bindsym Escape mode "default"
}
mode "$mode_gaps_inner" {
        bindsym plus  gaps inner current plus 5
        bindsym minus gaps inner current minus 5
        bindsym 0     gaps inner current set 0

        bindsym Shift+plus  gaps inner all plus 5
        bindsym Shift+minus gaps inner all minus 5
        bindsym Shift+0     gaps inner all set 0

        bindsym Return mode "default"
        bindsym Escape mode "default"
}
mode "$mode_gaps_outer" {
        bindsym plus  gaps outer current plus 5
        bindsym minus gaps outer current minus 5
        bindsym 0     gaps outer current set 0

        bindsym Shift+plus  gaps outer all plus 5
        bindsym Shift+minus gaps outer all minus 5
        bindsym Shift+0     gaps outer all set 0

        bindsym Return mode "default"
        bindsym Escape mode "default"
}
